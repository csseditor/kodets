- provide :title, 'Edit Track'

.container
  .row
    .col-md-6
      %h1 Edit #{@track.name}

      = form_for @track do |f|
        .form-group
          = f.label :name, class: 'control-label'
          = f.text_field :name, class: 'form-control', placeholder: 'Name'
        .form-group
          = f.label :description, class: 'control-label'
          = f.text_area :description, rows: 3, class: 'form-control', placeholder: 'Description'

    .col-md-6
      - if @track.items.any?
        .alert.alert-info.alert-dismissable
          %button.close{"type" => "button", "data-dismiss" => "alert", "aria-hidden" => "true"} &times;
          Click and drag the
          %span.glyphicon.glyphicon-align-justify
          icon to rearrage the order of lessons in the track.

        %ul#edit-track-sortable.hard-top-10
          - @track.items.sort_by! { |i| i.order }.each do |item|
            %li.list-group-item.edit-track-sortable-item{"id" => "#{item.class.name.parameterize}-#{item.id}", "data-id" => "#{item.class.name}-#{item.id}"}

              - # path_for_lesson found in ApplicationHelper
              = link_to item.name, path_for_lesson(item)
              %span.label.label-primary.track-item-label= item.class.name
              %span.glyphicon.glyphicon-align-justify.pull-right.edit-track-move-icon

  - # Whenever the items are re-ordered some JS adds their new values to this form
  = form_for @track, url: update_lesson_order_path, remote: true, method: :post, html: { class: 'update-lesson-order-form' } do |f|
    = f.hidden_field :track_id, value: @track.id
    - @track.items.each_with_index do |fitem, n|
      %input{"type" => "hidden", "name" => "track[items][#{n}][id]", "id" => "id-#{fitem.class.name}-#{fitem.id}", "value" => fitem.id}
      %input{"type" => "hidden", "name" => "track[items][#{n}][type]", "id" => "type-#{fitem.class.name}-#{fitem.id}", value => fitem.class.name}
      %input{"type" => "hidden", "name" => "track[items][#{n}][order]", "id" => "order-#{fitem.class.name}-#{fitem.id}"}
    = link_to "Back to Track", track_path(@track), class: "btn btn-default form-control button-form-control"
    = f.submit 'Submit', class: 'btn btn-primary form-control button-form-control', id: 'track-edit-order'
  .update-order-form-status

- # Require sortable files after page load otherwise it doesn't work
= javascript_include_tag 'jquery_sortable'
